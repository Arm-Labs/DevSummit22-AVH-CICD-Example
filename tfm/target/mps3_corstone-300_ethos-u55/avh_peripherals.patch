diff --git a/platform/ext/target/arm/mps3/an552/device/include/platform_regs.h b/platform/ext/target/arm/mps3/an552/device/include/platform_regs.h
index 6d772e4c..004120a9 100644
--- a/platform/ext/target/arm/mps3/an552/device/include/platform_regs.h
+++ b/platform/ext/target/arm/mps3/an552/device/include/platform_regs.h
@@ -326,6 +326,9 @@ struct sse300_nsacfg_t {
 #define UART5_PERIPH_PPCEXP2_POS_MASK              (1UL << 8)
 #define CLCD_PERIPH_PPCEXP2_POS_MASK               (1UL << 10)
 #define RTC_PERIPH_PPCEXP2_POS_MASK                (1UL << 11)
+#define VSI_PERIPH_PPCEXP2_POS_MASK                (1UL << 12)
+#define VIO_PERIPH_PPCEXP2_POS_MASK                (1UL << 13)
+#define VSOCKET_PERIPH_PPCEXP2_POS_MASK            (1UL << 14)
 /* End PERIPH PPCEXP2 peripherals definition */
 
 /* PERIPH PPCEXP3 peripherals definition */
diff --git a/platform/ext/target/arm/mps3/an552/target_cfg.c b/platform/ext/target/arm/mps3/an552/target_cfg.c
index b599acec..f4f05b57 100644
--- a/platform/ext/target/arm/mps3/an552/target_cfg.c
+++ b/platform/ext/target/arm/mps3/an552/target_cfg.c
@@ -132,7 +132,7 @@ enum tfm_plat_err_t system_reset_cfg(void)
 {
     struct sse300_sysctrl_t *sysctrl =
                             (struct sse300_sysctrl_t *)SSE300_SYSCTRL_BASE_S;
-    uint32_t reg_value = SCB->AIRCR;
+//  uint32_t reg_value = SCB->AIRCR;
 
     /* Enable system reset request for CPU 0, to be triggered via
      * NVIC_SystemReset function.
@@ -140,12 +140,12 @@ enum tfm_plat_err_t system_reset_cfg(void)
     sysctrl->reset_mask |= ENABLE_CPU0_SYSTEM_RESET_REQUEST;
 
     /* Clear SCB_AIRCR_VECTKEY value */
-    reg_value &= ~(uint32_t)(SCB_AIRCR_VECTKEY_Msk);
+//  reg_value &= ~(uint32_t)(SCB_AIRCR_VECTKEY_Msk);
 
     /* Enable system reset request only to the secure world */
-    reg_value |= (uint32_t)(SCB_AIRCR_WRITE_MASK | SCB_AIRCR_SYSRESETREQS_Msk);
+//  reg_value |= (uint32_t)(SCB_AIRCR_WRITE_MASK | SCB_AIRCR_SYSRESETREQS_Msk);
 
-    SCB->AIRCR = reg_value;
+//  SCB->AIRCR = reg_value;
 
     return TFM_PLAT_ERR_SUCCESS;
 }
@@ -465,6 +465,15 @@ enum tfm_plat_err_t ppc_init_cfg(void)
     err |= Driver_PPC_SSE300_PERIPH_EXP2.ConfigSecurity(
                                         CLCD_PERIPH_PPCEXP2_POS_MASK,
                                         PPC_SSE300_NONSECURE_CONFIG);
+    err |= Driver_PPC_SSE300_PERIPH_EXP2.ConfigSecurity(
+                                        VSI_PERIPH_PPCEXP2_POS_MASK,
+                                        PPC_SSE300_NONSECURE_CONFIG);
+    err |= Driver_PPC_SSE300_PERIPH_EXP2.ConfigSecurity(
+                                        VIO_PERIPH_PPCEXP2_POS_MASK,
+                                        PPC_SSE300_NONSECURE_CONFIG);
+    err |= Driver_PPC_SSE300_PERIPH_EXP2.ConfigSecurity(
+                                        VSOCKET_PERIPH_PPCEXP2_POS_MASK,
+                                        PPC_SSE300_NONSECURE_CONFIG);
 
     /* Grant un-privileged access for UART0 in NS domain */
     err |= Driver_PPC_SSE300_PERIPH_EXP2.ConfigPrivilege(
