diff --git a/platform/ext/target/arm/avh/mbedcrypto/CMakeLists.txt b/platform/ext/target/arm/avh/mbedcrypto/CMakeLists.txt
new file mode 100644
index 00000000..96fdc9af
--- /dev/null
+++ b/platform/ext/target/arm/avh/mbedcrypto/CMakeLists.txt
@@ -0,0 +1,18 @@
+#-------------------------------------------------------------------------------
+# Copyright (c) 2022, Arm Limited. All rights reserved.
+#
+# SPDX-License-Identifier: BSD-3-Clause
+#
+#-------------------------------------------------------------------------------
+
+############################ Crypto Service ####################################
+
+target_sources(crypto_service_mbedcrypto
+    PRIVATE
+        ${PLATFORM_DIR}/ext/target/arm/avh/mbedcrypto/entropy_poll_hw.c
+)
+
+target_include_directories(crypto_service_mbedcrypto
+    PUBLIC
+        ${PLATFORM_DIR}/ext/cmsis
+)
diff --git a/platform/ext/target/arm/avh/mbedcrypto/config.cmake b/platform/ext/target/arm/avh/mbedcrypto/config.cmake
new file mode 100644
index 00000000..4f1c5969
--- /dev/null
+++ b/platform/ext/target/arm/avh/mbedcrypto/config.cmake
@@ -0,0 +1,9 @@
+#-------------------------------------------------------------------------------
+# Copyright (c) 2022, Arm Limited. All rights reserved.
+#
+# SPDX-License-Identifier: BSD-3-Clause
+#
+#-------------------------------------------------------------------------------
+
+################################## Dependencies ################################
+set(TFM_MBEDCRYPTO_PLATFORM_EXTRA_CONFIG_PATH "${CMAKE_SOURCE_DIR}/platform/ext/target/arm/avh/mbedcrypto/config/mbedcrypto_user_config.h" CACHE PATH "Config to append to standard Mbed Crypto config, used by platforms to configure feature support")
diff --git a/platform/ext/target/arm/avh/mbedcrypto/config/mbedcrypto_user_config.h b/platform/ext/target/arm/avh/mbedcrypto/config/mbedcrypto_user_config.h
new file mode 100644
index 00000000..d24a01f8
--- /dev/null
+++ b/platform/ext/target/arm/avh/mbedcrypto/config/mbedcrypto_user_config.h
@@ -0,0 +1,25 @@
+/*
+ *  Copyright (C) 2006-2022, ARM Limited, All Rights Reserved
+ *  SPDX-License-Identifier: Apache-2.0
+ *
+ *  Licensed under the Apache License, Version 2.0 (the "License"); you may
+ *  not use this file except in compliance with the License.
+ *  You may obtain a copy of the License at
+ *
+ *  http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing, software
+ *  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
+ *  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *  See the License for the specific language governing permissions and
+ *  limitations under the License.
+ *
+ *  This file is part of mbed TLS (https://tls.mbed.org)
+ */
+
+#ifndef MBEDTLS_USER_CONFIG_H
+#define MBEDTLS_USER_CONFIG_H
+
+#define MBEDTLS_ENTROPY_HARDWARE_ALT
+
+#endif /* MBEDTLS_USER_CONFIG_H */
diff --git a/platform/ext/target/arm/avh/mbedcrypto/entropy_poll_hw.c b/platform/ext/target/arm/avh/mbedcrypto/entropy_poll_hw.c
new file mode 100644
index 00000000..5a6f29df
--- /dev/null
+++ b/platform/ext/target/arm/avh/mbedcrypto/entropy_poll_hw.c
@@ -0,0 +1,64 @@
+/*
+ * Entropy hardware poll function
+ *
+ *  Copyright (C) 2006-2022, Arm Limited, All Rights Reserved
+ *  SPDX-License-Identifier: Apache-2.0
+ *
+ *  Licensed under the Apache License, Version 2.0 (the "License"); you may
+ *  not use this file except in compliance with the License.
+ *  You may obtain a copy of the License at
+ *
+ *  http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing, software
+ *  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
+ *  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *  See the License for the specific language governing permissions and
+ *  limitations under the License.
+ */
+
+#if !defined(MBEDTLS_CONFIG_FILE)
+ #include "mbedtls/config.h"
+#else
+ #include MBEDTLS_CONFIG_FILE
+#endif
+
+#if defined(MBEDTLS_ENTROPY_HARDWARE_ALT)
+
+#include <string.h>
+#include "entropy_poll.h"
+#include "cmsis_compiler.h"
+
+#define SYS_TIME        0x11U
+
+__STATIC_INLINE int32_t semihosting_call (uint32_t operation, void *args) {
+  register uint32_t __r0 __ASM("r0") = operation;
+  register uint32_t __r1 __ASM("r1") = (uint32_t)args;
+
+  __ASM volatile (
+    "bkpt 0xab" : "=r"(__r0) : "r"(__r0), "r"(__r1) :
+  );
+
+  return (int32_t)__r0;
+}
+
+/**
+ * Entropy poll callback for a hardware source
+ */
+int mbedtls_hardware_poll (void *data, unsigned char *output,
+                           size_t len, size_t *olen) {
+  uint32_t time;
+
+  if (len < sizeof(uint32_t)) {
+    *olen = 0;
+    return (-1);
+  }
+
+  /* Note: This is weak entropy source */
+  time = semihosting_call(SYS_TIME, NULL);
+  memcpy (output, &time, sizeof(time));
+  *olen = sizeof (time);
+  return (0);
+}
+
+#endif /* MBEDTLS_ENTROPY_HARDWARE_ALT */
diff --git a/platform/ext/target/arm/mps3/an552/config.cmake b/platform/ext/target/arm/mps3/an552/config.cmake
new file mode 100644
index 00000000..6890439d
--- /dev/null
+++ b/platform/ext/target/arm/mps3/an552/config.cmake
@@ -0,0 +1,8 @@
+#-------------------------------------------------------------------------------
+# Copyright (c) 2022, Arm Limited. All rights reserved.
+#
+# SPDX-License-Identifier: BSD-3-Clause
+#
+#-------------------------------------------------------------------------------
+
+include(platform/ext/target/arm/avh/mbedcrypto/config.cmake)
diff --git a/platform/ext/target/arm/mps3/an552/CMakeLists.txt b/platform/ext/target/arm/mps3/an552/CMakeLists.txt
index ac9fd480..2c08e06d 100644
--- a/platform/ext/target/arm/mps3/an552/CMakeLists.txt
+++ b/platform/ext/target/arm/mps3/an552/CMakeLists.txt
@@ -8,6 +8,8 @@
 cmake_policy(SET CMP0076 NEW)
 set(CMAKE_CURRENT_SOURCE_DIR ${CMAKE_CURRENT_LIST_DIR})
 
+include(${CMAKE_CURRENT_SOURCE_DIR}/../../avh/mbedcrypto/CMakeLists.txt)
+
 #========================= Platform region defs ===============================#
 
 target_include_directories(platform_region_defs
